document.addEventListener('DOMContentLoaded', function() {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è
    const isLoginPage = window.location.pathname.includes('/login');
    const isRegisterPage = window.location.pathname.includes('/register');
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º
    const loginForm = document.getElementById('login-form');
    const registerForm = document.getElementById('register-form');
    const errorMessage = document.getElementById('error-message');
    const interestsErrorMessage = document.getElementById('interests-error-message');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–≤—É—Ö—à–∞–≥–æ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const step1 = document.getElementById('step-1');
    const step2 = document.getElementById('step-2');
    const interestsContainer = document.getElementById('interests-container');
    const skipInterestsBtn = document.getElementById('skip-interests');
    const submitInterestsBtn = document.getElementById('submit-interests');
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ —Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    let userData = {};
    let selectedInterests = [];
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
    function showError(message, element = errorMessage) {
        element.textContent = message;
        element.classList.add('show');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—à–∏–±–æ–∫
    function clearError(element = errorMessage) {
        element.textContent = '';
        element.classList.remove('show');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∫—É–∫
    function getCookie(name) {
        let cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.substring(0, name.length + 1) === (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥–∞
    async function handleLogin(e) {
        e.preventDefault();
        clearError();
        
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
        if (!email || !password) {
            showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
            const csrftoken = getCookie('csrftoken');
            
            const response = await fetch('/app/login/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': csrftoken
                },
                body: JSON.stringify({ email, password }),
                credentials: 'include'
            });
            
            const data = await response.json();
            console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', data);
            
            if (response.ok && data.success) {
                console.log('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ –∫—É–∫–∏
                if (data.tokens && data.tokens.access) {
                    document.cookie = `access_token=${data.tokens.access}; path=/`;
                }
                if (data.tokens && data.tokens.refresh) {
                    document.cookie = `refresh_token=${data.tokens.refresh}; path=/`;
                }
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
                window.location.href = '/app';
            } else {
                // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
                showError(data.detail || data.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
            }
        } catch (error) {
            showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
            console.error(error);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    async function handleFirstStep(e) {
        e.preventDefault();
        clearError();
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        userData = {
            first_name: document.getElementById('first_name').value,
            last_name: document.getElementById('last_name').value,
            email: document.getElementById('email').value,
            phone: document.getElementById('phone').value,
            gender: document.getElementById('gender').value,
            kurs: document.getElementById('kurs').value,
            password: document.getElementById('password').value,
            bio: document.getElementById('bio').value
        };
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
        if (!userData.first_name || !userData.last_name || !userData.email || 
            !userData.phone || !userData.password) {
            showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if (!/^[0-9]{11}$/.test(userData.phone)) {
            showError('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 11 —Ü–∏—Ñ—Ä');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
        const hasLength = userData.password.length >= 8;
        const hasLowercase = /[a-z]/.test(userData.password);
        const hasUppercase = /[A-Z]/.test(userData.password);
        const hasNumber = /[0-9]/.test(userData.password);
        const hasSpecial = /[^A-Za-z0-9]/.test(userData.password);
        
        if (!(hasLength && hasLowercase && hasUppercase && hasNumber && hasSpecial)) {
            showError('–ü–∞—Ä–æ–ª—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
            return;
        }
        
        // –ü–µ—Ä–µ—Ö–æ–¥ –∫–æ –≤—Ç–æ—Ä–æ–º—É —à–∞–≥—É - –≤—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
        step1.style.display = 'none';
        step2.style.display = 'block';
        step2.classList.add('fade-in');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
        loadInterests();
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
    async function loadInterests() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
            const csrftoken = getCookie('csrftoken');
            
            const response = await fetch('/app/api/interests/', {
                headers: {
                    'X-CSRFToken': csrftoken
                },
                credentials: 'include'
            });
            
            if (!response.ok) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã');
            }
            
            const interests = await response.json();
            
            if (interests.length === 0) {
                interestsContainer.innerHTML = '<p class="no-interests">–ò–Ω—Ç–µ—Ä–µ—Å—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>';
                return;
            }
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã
            interestsContainer.innerHTML = interests.map(interest => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∫–æ–Ω–∫–∞ –∏ –∫–∞–∫ –µ–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å
                let iconHtml;
                if (!interest.icon) {
                    // –ï—Å–ª–∏ –∏–∫–æ–Ω–∫–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    iconHtml = '<span class="interest-icon">üîç</span>';
                } else if (interest.icon.startsWith('http') || interest.icon.startsWith('/media/')) {
                    // –ï—Å–ª–∏ —ç—Ç–æ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
                    iconHtml = `<img src="${interest.icon}" alt="${interest.name}" class="interest-icon-img">`;
                } else {
                    // –ï—Å–ª–∏ —ç—Ç–æ —ç–º–æ–¥–∑–∏ –∏–ª–∏ —Å–∏–º–≤–æ–ª
                    iconHtml = `<span class="interest-icon">${interest.icon}</span>`;
                }
                
                return `
                    <div class="interest-item" data-id="${interest.id}">
                        ${iconHtml}
                        <div class="interest-name">${interest.name}</div>
                        <div class="interest-description">${interest.description || ''}</div>
                    </div>
                `;
            }).join('');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
            document.querySelectorAll('.interest-item').forEach(item => {
                item.addEventListener('click', function() {
                    const interestId = parseInt(this.dataset.id);
                    
                    if (this.classList.contains('selected')) {
                        // –£–±–∏—Ä–∞–µ–º –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
                        this.classList.remove('selected');
                        selectedInterests = selectedInterests.filter(id => id !== interestId);
                    } else {
                        // –î–æ–±–∞–≤–ª—è–µ–º –∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–º
                        this.classList.add('selected');
                        selectedInterests.push(interestId);
                    }
                });
            });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤:', error);
            interestsContainer.innerHTML = '<p class="error">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏
    async function completeRegistration(withInterests = true) {
        clearError(interestsErrorMessage);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (withInterests && selectedInterests.length > 0) {
            userData.interests = selectedInterests;
        }
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
            const csrftoken = getCookie('csrftoken');
            
            const response = await fetch('/app/register/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': csrftoken
                },
                body: JSON.stringify(userData),
                credentials: 'include'
            });
            
            const data = await response.json();
            
            if (response.ok && data.success) {
                console.log('–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                window.location.href = '/app';  // –ò–∑–º–µ–Ω–µ–Ω–æ —Å –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ '/app'
            } else {
                // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É
                step2.style.display = 'none';
                step1.style.display = 'block';
                
                const errorMsg = data.errors 
                    ? (typeof data.errors === 'string' ? data.errors : Object.values(data.errors).flat().join(', '))
                    : (data.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
                showError(errorMsg);
            }
        } catch (error) {
            step2.style.display = 'none';
            step1.style.display = 'block';
            showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
            console.error(error);
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∞—Ä–æ–ª—è
    function setupPasswordToggle() {
        const passwordToggle = document.getElementById('password-toggle');
        const passwordInput = document.getElementById('password');
        
        if (passwordToggle && passwordInput) {
            const showIcon = passwordToggle.querySelector('.show-password');
            const hideIcon = passwordToggle.querySelector('.hide-password');
            
            passwordToggle.addEventListener('click', function() {
                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    showIcon.style.display = 'none';
                    hideIcon.style.display = 'inline';
                } else {
                    passwordInput.type = 'password';
                    showIcon.style.display = 'inline';
                    hideIcon.style.display = 'none';
                }
            });
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    function setupPasswordValidation() {
        const passwordInput = document.getElementById('password');
        const strengthBar = document.getElementById('strength-bar');
        const requirements = document.getElementById('password-requirements');
        
        if (passwordInput && (strengthBar || requirements)) {
            // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–µ—Å–ª–∏ –ø–æ–ª–µ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ)
            validatePassword(passwordInput.value);
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
            passwordInput.addEventListener('input', function() {
                validatePassword(this.value);
            });
            
            // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è
            function validatePassword(password) {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
                const hasLength = password.length >= 8;
                const hasLowercase = /[–∞-—èa-z]/.test(password);
                const hasUppercase = /[–ê-–ØA-Z]/.test(password);
                const hasNumber = /[0-9]/.test(password);
                const hasSpecial = /[^A-Za-z–ê-–Ø–∞-—è0-9]/.test(password);
                
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                if (strengthBar) {
                    // –†–∞—Å—á–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                    let strength = 0;
                    if (hasLength) strength += 1;
                    if (hasLowercase) strength += 1;
                    if (hasUppercase) strength += 1;
                    if (hasNumber) strength += 1;
                    if (hasSpecial) strength += 1;
                    
                    // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –≤—Å–µ inline —Å—Ç–∏–ª–∏ (–µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏)
                    strengthBar.style.width = '';
                    strengthBar.style.backgroundColor = '';
                    
                    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
                    strengthBar.className = 'strength-bar';
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                    if (password.length === 0) {
                        strengthBar.style.width = '0';
                    } else if (strength === 1) {
                        strengthBar.classList.add('strength-weak');
                    } else if (strength === 2) {
                        strengthBar.classList.add('strength-fair');
                    } else if (strength === 3) {
                        strengthBar.classList.add('strength-good');
                    } else if (strength === 4) {
                        strengthBar.classList.add('strength-strong');
                    } else {
                        strengthBar.classList.add('strength-very-strong');
                    }
                }
                
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
                if (requirements) {
                    updateRequirementStatus('length', hasLength);
                    updateRequirementStatus('lowercase', hasLowercase);
                    updateRequirementStatus('uppercase', hasUppercase);
                    updateRequirementStatus('number', hasNumber);
                    updateRequirementStatus('special', hasSpecial);
                }
            }
        }
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    function updateRequirementStatus(requirementName, isMet) {
        const requirement = document.querySelector(`.requirement[data-requirement="${requirementName}"]`);
        if (requirement) {
            if (isMet) {
                requirement.classList.add('met');
                requirement.classList.remove('not-met');
            } else {
                requirement.classList.add('not-met');
                requirement.classList.remove('met');
            }
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–æ—Ä–º –∏ –∫–Ω–æ–ø–æ–∫
    if (isLoginPage && loginForm) {
        loginForm.addEventListener('submit', handleLogin);
    }
    
    if (isRegisterPage) {
        if (registerForm) {
            registerForm.addEventListener('submit', handleFirstStep);
        }
        
        if (skipInterestsBtn) {
            skipInterestsBtn.addEventListener('click', function() {
                completeRegistration(false);
            });
        }
        
        if (submitInterestsBtn) {
            submitInterestsBtn.addEventListener('click', function() {
                completeRegistration(true);
            });
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        setupPasswordValidation();
    }
    
    // –ï—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–∏–º –≤—Ç–æ—Ä–æ–π —à–∞–≥, –∑–∞–≥—Ä—É–∑–∏–º –∏–Ω—Ç–µ—Ä–µ—Å—ã
    if (isRegisterPage && step2 && step2.style.display !== 'none') {
        loadInterests();
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    setupPasswordToggle();
});